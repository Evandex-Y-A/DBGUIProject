/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.awt.CardLayout;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import DAO.UserDAO;
/**
 *
 * @author evandex
 */
public class HomeLayout extends javax.swing.JPanel {
    private Login loginPanel;
    private Homepage homePanel;
    private Settings settingsPanel;
    private TraitUI traitPanel;
    /**
     * Creates new form Homepage
     */
    public HomeLayout(Login login) {
        this.loginPanel = login; 
        homePanel = new Homepage();
        settingsPanel = new Settings();
        traitPanel = new TraitUI();
        initComponents();
        this.setPreferredSize(new Dimension(800, 600));
        cardPanel.add(homePanel, "main");
        cardPanel.add(settingsPanel, "settings");
        cardPanel.add(traitPanel, "traits");
        CardLayout innerCard = (CardLayout) cardPanel.getLayout();
        innerCard.show(cardPanel, "main");
    }
    
    public void onShow() {
        traitPanel.initData();
    }
    
    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);
        if (visible) {
            onShow(); // Load data when the panel becomes visible
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        mainButton = new javax.swing.JButton();
        traitsButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        deleteAccountButton = new javax.swing.JButton();
        cardPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        sidePanel.setBackground(new java.awt.Color(51, 51, 51));
        sidePanel.setMaximumSize(new java.awt.Dimension(111, 92));
        sidePanel.setMinimumSize(new java.awt.Dimension(111, 92));
        sidePanel.setName(""); // NOI18N
        sidePanel.setPreferredSize(new java.awt.Dimension(111, 300));
        sidePanel.setLayout(new javax.swing.BoxLayout(sidePanel, javax.swing.BoxLayout.Y_AXIS));

        mainButton.setText("Main");
        mainButton.setMaximumSize(new java.awt.Dimension(111, 23));
        mainButton.setMinimumSize(new java.awt.Dimension(111, 23));
        mainButton.setPreferredSize(new java.awt.Dimension(111, 23));
        mainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainButtonActionPerformed(evt);
            }
        });
        sidePanel.add(mainButton);

        traitsButton.setText("Traits");
        traitsButton.setMaximumSize(new java.awt.Dimension(111, 23));
        traitsButton.setMinimumSize(new java.awt.Dimension(111, 23));
        traitsButton.setPreferredSize(new java.awt.Dimension(111, 23));
        traitsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traitsButtonActionPerformed(evt);
            }
        });
        sidePanel.add(traitsButton);

        logoutButton.setText("Log Out");
        logoutButton.setMaximumSize(new java.awt.Dimension(111, 23));
        logoutButton.setMinimumSize(new java.awt.Dimension(111, 23));
        logoutButton.setPreferredSize(new java.awt.Dimension(111, 23));
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        sidePanel.add(logoutButton);

        deleteAccountButton.setText("Delete Account");
        deleteAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountButtonActionPerformed(evt);
            }
        });
        sidePanel.add(deleteAccountButton);

        add(sidePanel, java.awt.BorderLayout.WEST);

        cardPanel.setLayout(new java.awt.CardLayout());
        add(cardPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        loginPanel.resetFields(); // Resets the text field in the login panel for security
        CardLayout outerCard = (CardLayout)getParent().getLayout();
        outerCard.show(getParent(), "login");
        CardLayout innerCard = (CardLayout) cardPanel.getLayout();
        innerCard.show(cardPanel, "main");
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void mainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainButtonActionPerformed
        CardLayout innerCard = (CardLayout) cardPanel.getLayout();
        innerCard.show(cardPanel, "main");
    }//GEN-LAST:event_mainButtonActionPerformed

    private void traitsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traitsButtonActionPerformed
        CardLayout innerCard = (CardLayout) cardPanel.getLayout();
        innerCard.show(cardPanel, "traits");
    }//GEN-LAST:event_traitsButtonActionPerformed

    private void deleteAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountButtonActionPerformed
        int response = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to delete this account?",
                    "Confirm Delete",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
                );
        if (response == JOptionPane.YES_OPTION) {
            UserDAO deleteAccount = new UserDAO();
            try {
                if (deleteAccount.deleteUser(UserDAO.currentUser.getID())) {
                    JOptionPane.showMessageDialog(this, "Successfully deleted account.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete account.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            loginPanel.resetFields();
            CardLayout outerCard = (CardLayout)getParent().getLayout();
            outerCard.show(getParent(), "login");
            CardLayout innerCard = (CardLayout) cardPanel.getLayout();
            innerCard.show(cardPanel, "main");
        }
    }//GEN-LAST:event_deleteAccountButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cardPanel;
    private javax.swing.JButton deleteAccountButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton mainButton;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton traitsButton;
    // End of variables declaration//GEN-END:variables
}
