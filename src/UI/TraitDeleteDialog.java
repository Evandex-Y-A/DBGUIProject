/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UI;

import java.awt.Frame;
import javax.swing.JOptionPane;
import DAO.TraitDAO;

/**
 * Dialog window for deleting an existing trait.
 * <p>
 * Prompts the user to enter the name of the trait to delete, then asks
 * for confirmation before delegating the deletion to {@link TraitDAO}.
 * </p>
 * 
 * @see TraitDAO
 */
public class TraitDeleteDialog extends javax.swing.JDialog {
    
    /**
     * Reference to the parent frame, used as the owner for confirmation dialogs.
     */
    private Frame parent;
    
    /**
     * Constructs the delete-trait dialog.
     *
     * @param parent the parent frame over which this dialog is centered
     * @param modal  {@code true} to block input to other windows while shown
     */
    public TraitDeleteDialog(Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        setResizable(false);
        setLocationRelativeTo(parent);
    }

    /**
     * Initializes Swing components.
     * <p>
     * WARNING: This code is auto-generated by the Form Editor and will be
     * regenerated if the form is modified. Do NOT manually edit this block.
     * </p>
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        textField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Trait Name: ");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(textField, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the "Delete" button click.
     * <p>
     * Reads the trait name from the text field, shows a confirmation dialog,
     * and if confirmed, calls {@link TraitDAO#deleteTrait(String)}. Displays
     * a success or error message accordingly and closes the dialog on success.
     * </p>
     *
     * @param evt the action event (ignored)
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int response = JOptionPane.showConfirmDialog(
                    parent,
                    "Are you sure you want to delete this trait?",
                    "Confirm Delete",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
                );
        if (response == JOptionPane.YES_OPTION) {
            TraitDAO traitDelete = new TraitDAO();
            String trait = textField.getText();
            try {
                if (traitDelete.deleteTrait(trait)) {
                    JOptionPane.showMessageDialog(this, "Successfully deleted trait.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete trait.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Handles the "Cancel" button click by closing the dialog without deleting.
     *
     * @param evt the action event (ignored)
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Application entry point for standalone testing of the delete-trait dialog.
     * <p>
     * Sets the Nimbus look and feel (if available), then creates and displays
     * the dialog. Exits the JVM when the dialog window is closed.
     * </p>
     *
     * @param args command-line arguments (ignored)
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TraitDeleteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TraitDeleteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TraitDeleteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TraitDeleteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TraitDeleteDialog dialog = new TraitDeleteDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}
